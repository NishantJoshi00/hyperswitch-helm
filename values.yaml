# Configuration values used for the deployment of the application
application:
  # The is the configuration that is globally common for all the application related deployments
  global:
    # Number of replicas to be used for the application by default (for server and consumer)
    replicas: 3
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the all the deployments and their pods
    labels:
      managedBy: hyperswitch

    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application services
    env:
      pod_name: 
        name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name

    configMap: |
      [server]
      host = 0.0.0.0

    # secrets to be used by the hyperswitch application
    secrets:


  server:

    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-router:v1.78.0-standalone
    # Number of replicas to be used for the application
    replicas: 3
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-server
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: router
    secrets:
      kms_admin_api_key: test_admin
      kms_jwt_secret: test_admin
      admin_api_key: test_admin
      jwt_secret: test_admin
      recon_admin_api_key: test_admin
    master_enc_key: 471f22516724347bcca9c20c5fa88d9821c4604e63a6aceffd24605809c9237c
    locker:
      host: locker-host
      locker_public_key: "public"
      hyperswitch_private_key: "private"
    basilisk:
      host: basilisk-host
    server_base_url: https://sandbox.hyperswitch.io
  consumer:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-consumer:beta
    # Number of replicas to be used for the application
    replicas: 3
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-consumer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: consumer


  producer:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-producer:beta
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-producer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: producer
  
  dashboard:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-control-center:v1.0.0
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-control-center
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: dashboard
      apiBaseUrl: http://localhost:8080
      sdkBaseUrl: http://localhost:8080/v1/HyperLoader.js

  sdk:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-web:v1.0.0
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-sdk
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: sdk
      hyperswitchPublishableKey: pub_key
      hyperswitchSecretKey: secret_key
      hyperswitchServerUrl: server_url
      hyperSwitchClientUrl: client_url
      selfServerUrl: ENTER_YOUR_SERVER_APPLICATION_URL

# configuration values to be used by the service that is connected to the hyperswitch server
services:
  # labels to be used bht the service
  labels:
    app: hyperswitch-server

  # port to be used for routing http traffic
  httpPort: 80


# ingress:
#   # should we create a new ingress
#   enabled: true
  
#   # name of the ingress
#   name: hyperswitch-ingress

#   # annotation that are to be used by the ingress
#   annotations:
#     alb.ingress.kubernetes.io/backend-protocol-version: HTTP1

redis:
  host: "redis"
  replicaCount: 1

loadBalancer: 
  targetSecurityGroup: loadBalancer-sg

db: 
  name: hyperswitch
  host: db_host
  user_name: db_user
  password: db_pass

loki:
  auth_enabled: false

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
