[server]
port = 8080
host = "0.0.0.0"
request_body_limit = 32_768 # Post request body is limited to 16k
shutdown_timeout = 30
workers = 8

# Analytics configuration.
[analytics]
source = "sqlx" # The Analytics source/strategy to be used

[analytics.sqlx]
pool_size = 5             # Number of connections to keep open
connection_timeout = 10   # Timeout for database connection in seconds
queue_strategy = "Fifo"   # Add the queue strategy used by the database bb8 client

[master_database]
pool_size = "20"
connection_timeout = 10   
queue_strategy = "Fifo"

[replica_database]
pool_size = "20"
connection_timeout = 10   # Timeout for database connection in seconds
queue_strategy = "Fifo"   # Add the queue strategy used by the database bb8 client


[redis]
host = "redis.com"
port = 6379

[log.console]
enabled = true
level = "DEBUG"
log_format = "json"

[log.file]
level = "DEBUG"
log_format = "json"

[log.telemetry]
enabled = false
otel_exporter_otlp_timeout = 5000                     # timeout (in milliseconds) for sending metrics and traces
ignore_errors = false                                 # boolean [true or false], whether to ignore errors during traces or metrics pipeline setup
sampling_rate = 0.1                                   # decimal rate between 0.0 - 1.0

[cors]
max_age = 30                            # Maximum time (in seconds) for which this CORS request may be cached.
origins = "http://localhost:8080"       # List of origins that are allowed to make requests.
allowed_methods = "GET,POST,PUT,DELETE" # List of methods that are allowed
wildcard_origin = false

[forex_api]
call_delay = 21600                # Api calls are made after every 6 hrs
local_fetch_retry_count = 5       # Fetch from Local cache has retry count as 5
local_fetch_retry_delay = 1000    # Retry delay for checking write condition
api_timeout = 20000               # Api timeouts once it crosses 20000 ms
redis_lock_timeout = 26000        # Redis remains write locked for 26000 ms once the acquire_redis_lock is called

[payment_method_auth]
redis_expiry = 900          # Redis expiry time in milliseconds

[opensearch.auth]
auth = "basic"
username = "admin"
password = "admin"
region = "eu-central-1"

[opensearch.indexes]
payment_attempts = "hyperswitch-payment-attempt-events"
payment_intents = "hyperswitch-payment-intent-events"
refunds = "hyperswitch-refund-events"
disputes = "hyperswitch-dispute-events"

[connector_onboarding.paypal]
enabled = true 

[logs]
log_directory = "logs"
log_file_name = "debug.log"
enable_async = true

[report_download_config]
dispute_function = "report_download_config_dispute_function" # Config to download dispute report
payment_function = "report_download_config_payment_function" # Config to download payment report
refund_function = "report_download_config_refund_function"   # Config to download refund report
region = "report_download_config_region"    

[lock_settings]
delay_between_retries_in_milliseconds = 500 # Delay between retries in milliseconds
redis_lock_expiry_seconds = 180             # Seconds before the redis lock expires
