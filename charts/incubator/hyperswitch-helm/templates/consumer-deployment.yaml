apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: 
  {{- with (default .Values.application.global.annotations .Values.application.consumer.annotations) }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  generation: 1
  name: hyperswitch-consumer-v1o47o0ohotfixo3
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: {{ default .Values.application.global.progressDeadlineSeconds .Values.application.consumer.progressDeadlineSeconds }}
  replicas: {{ default .Values.application.global.replicas .Values.application.consumer.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.application.consumer.labels.app }}
      version: consumer-v1o47o0ohotfixo3
  strategy:
  {{- with (default .Values.application.global.strategy .Values.application.consumer.strategy) }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2023-04-21T14:21:23+05:30"
      creationTimestamp: null
      labels:
        app: {{ .Values.application.consumer.labels.app }}
        version: consumer-v1o47o0ohotfixo3
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{- with (default .Values.application.global.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution .Values.application.consumer.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution) }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      initContainers:
        {{- include "postgresql.initContainer.check.ready" . | nindent 8 }}
      containers:
      - env:
        - name: {{ .Values.application.global.env.pod_name.name }}
          valueFrom:
            {{- with .Values.application.global.env.pod_name.valueFrom.fieldRef }}
            fieldRef:
              {{- toYaml . | nindent 14 }}
            {{- end }}
        - name: ROUTER__ANALYTICS__CLICKHOUSE__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql.secret" . }}
              key: password
        - name: ROUTER__ANALYTICS__SQLX__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql.secret" . }}
              key: password
        - name: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY1
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY1
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY2
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY2
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY1
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY1
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY2
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY2
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER1
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER1
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER2
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER2
              name: hyperswitch-secrets
        - name: ROUTER__JWEKEY__TUNNEL_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: ROUTER__JWEKEY__TUNNEL_PRIVATE_KEY
              name: hyperswitch-secrets
        - name: ROUTER__KMS__KEY_ID
          valueFrom:
            secretKeyRef:
              key: ROUTER__KMS__KEY_ID
              name: hyperswitch-secrets
        - name: ROUTER__KMS__REGION
          valueFrom:
            secretKeyRef:
              key: ROUTER__KMS__REGION
              name: hyperswitch-secrets
        - name: ROUTER__MASTER_DATABASE__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql.secret" . }}
              key: password
        - name: ROUTER__REPLICA_DATABASE__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql.secret" . }}
              key: password
        - name: ROUTER__SECRETS__KMS_ENCRYPTED_ADMIN_API_KEY
          valueFrom:
            secretKeyRef:
              key: ROUTER__SECRETS__KMS_ENCRYPTED_ADMIN_API_KEY
              name: hyperswitch-secrets
        - name: ROUTER__SECRETS__KMS_ENCRYPTED_JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: ROUTER__SECRETS__KMS_ENCRYPTED_JWT_SECRET
              name: hyperswitch-secrets
        envFrom:
          - configMapRef:
              name: consumer-cm-{{.Release.Name }}
        image: {{ .Values.services.consumer.image }}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -15 node
        name: hyperswitch-consumer
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /local/config/production.toml
          name: hyperswitch-config
          subPath: production.toml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: hyperswitch-router-role
      terminationGracePeriodSeconds: {{ .Values.application.consumer.terminationGracePeriodSeconds }}
      volumes:
      - configMap:
          defaultMode: 420
          name: hyperswitch-config
        name: hyperswitch-config
