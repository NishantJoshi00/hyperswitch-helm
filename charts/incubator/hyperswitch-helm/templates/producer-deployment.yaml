apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: 
  {{- with (default .Values.application.global.annotations .Values.application.producer.annotations) }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  generation: 1
  name: hyperswitch-producer-b03005fv1
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: {{ default .Values.application.global.progressDeadlineSeconds .Values.application.producer.progressDeadlineSeconds}}
  replicas: {{ default .Values.application.global.replicas .Values.application.producer.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.application.producer.labels.app }}
      version: b03005fv1
  strategy:
  {{- with (default .Values.application.global.strategy .Values.application.producer.strategy) }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.application.producer.labels.app }}
        version: b03005fv1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{- with (default .Values.application.global.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution .Values.application.producer.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution) }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      initContainers:
        {{- include "postgresql.initContainer.check.ready" . | nindent 8 }}
      containers:
      - env:
          - name: ROUTER__MASTER_DATABASE__PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "postgresql.secret" . }}
                key: password
          - name: ROUTER__REPLICA_DATABASE__PASSWORD
            valueFrom:
            secretKeyRef:
              name: {{ include "postgresql.secret" . }}
              key: password
          - name: ROUTER__SECRETS__KMS_ENCRYPTED_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: ROUTER__SECRETS__KMS_ENCRYPTED_JWT_SECRET
                name: hyperswitch-secrets
          - name: ROUTER__SECRETS__KMS_ENCRYPTED_ADMIN_API_KEY
            valueFrom:
              secretKeyRef:
                key: ROUTER__SECRETS__KMS_ENCRYPTED_ADMIN_API_KEY
                name: hyperswitch-secrets
          - name: ROUTER__KMS__KEY_ID
            valueFrom:
              secretKeyRef:
                key: ROUTER__KMS__KEY_ID
                name: hyperswitch-secrets
          - name: ROUTER__KMS__REGION
            valueFrom:
              secretKeyRef:
                key: ROUTER__KMS__REGION
                name: hyperswitch-secrets
          - name: ROUTER__API_KEYS__KMS_ENCRYPTED_HASH_KEY
            valueFrom:
              secretKeyRef:
                key: ROUTER__API_KEYS__KMS_ENCRYPTED_HASH_KEY
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER1
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER1
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER2
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_KEY_IDENTIFIER2
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY1
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY1
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY2
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_ENCRYPTION_KEY2
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY1
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY1
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY2
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__LOCKER_DECRYPTION_KEY2
                name: hyperswitch-secrets
          - name: ROUTER__SECRETS__MASTER_ENC_KEY
            valueFrom:
              secretKeyRef:
                key: ROUTER__SECRETS__MASTER_ENC_KEY
                name: hyperswitch-secrets
          - name: ROUTER__ANALYTICS__SQLX__KMS_ENCRYPTED_PASSWORD
            valueFrom:
              secretKeyRef:
                key: ROUTER__ANALYTICS__SQLX__KMS_ENCRYPTED_PASSWORD
                name: hyperswitch-secrets
          - name: ROUTER__JWEKEY__TUNNEL_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: ROUTER__JWEKEY__TUNNEL_PRIVATE_KEY
                name: hyperswitch-secrets
          - name: ROUTER__ANALYTICS__CLICKHOUSE__PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "postgresql.secret" . }}
                key: password
          - name: ROUTER__ANALYTICS__SQLX__PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "postgresql.secret" . }}
                key: password
        envFrom:
          - configMapRef:
              name: producer-cm-{{.Release.Name }}
        image: {{ .Values.services.producer.image }}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -15 node
        name: hyperswitch-producer
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /local/config/production.toml
          name: hyperswitch-config
          subPath: production.toml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: hyperswitch-router-role
      terminationGracePeriodSeconds: {{ .Values.application.producer.terminationGracePeriodSeconds}}
      volumes:
      - configMap:
          defaultMode: 420
          name: hyperswitch-config
        name: hyperswitch-config
