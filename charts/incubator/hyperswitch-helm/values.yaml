# Configuration values used for the deployment of the application
application:
  # The is the configuration that is globally common for all the application related deployments
  global:
    # Number of replicas to be used for the application by default (for server and consumer)
    replicas: 3
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the all the deployments and their pods
    labels:
      managedBy: hyperswitch

    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application services
    env:
      pod_name: 
        name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name

    configMap: |
      [server]
      host = 0.0.0.0

    # secrets to be used by the hyperswitch application
    secrets:


  server:
    # Number of replicas to be used for the application
    replicas: 3
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-server
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: my-role-arn
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: router
      host: hyperswitch
    secrets:
      kms_admin_api_key: dGVzdF9hZG1pbg==
      kms_jwt_secret: dGVzdF9hZG1pbg==
      admin_api_key: dGVzdF9hZG1pbg==
      jwt_secret: dGVzdF9hZG1pbg==
      recon_admin_api_key: dGVzdF9hZG1pbg==
      kms_encrypted_api_hash_key: MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZgo
      kms_key_id: a21zX2tleV9pZA==
      kms_key_region: dXMtZWFzdC0x
      kms_jwekey_locker_identifier1: ZHVtbXlfdmFs
      kms_jwekey_locker_identifier2: ZHVtbXlfdmFs
      kms_jwekey_locker_encryption_key1: ZHVtbXlfdmFs
      kms_jwekey_locker_encryption_key2: ZHVtbXlfdmFs
      kms_jwekey_locker_decryption_key1: ZHVtbXlfdmFs
      kms_jwekey_locker_decryption_key2: ZHVtbXlfdmFs
      kms_jwekey_vault_encryption_key: ZHVtbXlfdmFs
      kms_jwekey_vault_private_key: ZHVtbXlfdmFs
      kms_jwekey_tunnel_private_key: ZHVtbXlfdmFs
      kms_jwekey_rust_locker_encryption_key: ZHVtbXlfdmFs
      kms_connector_onboarding_paypal_client_id: ZHVtbXlfdmFs
      kms_connector_onboarding_paypal_client_secret: ZHVtbXlfdmFs
      kms_connector_onboarding_paypal_partner_id: ZHVtbXlfdmFs

    master_enc_key: NDcxZjIyNTE2NzI0MzQ3YmNjYTljMjBjNWZhODhkOTgyMWM0NjA0ZTYzYTZhY2VmZmQyNDYwNTgwOWM5MjM3Yw==
    locker:
      host: locker-host
      locker_public_key: |
        public
      hyperswitch_private_key: |
        private
    basilisk:
      host: basilisk-host
  consumer:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-consumer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: consumer


  producer:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-producer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: producer
  
  controlCenter:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-control-center:v1.17.0
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-control-center
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: dashboard
      host: hyperswitch-control-center

  sdk:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32 
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-sdk-demo
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: 
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      host: hyperswitch-sdk-demo
      binary: sdk

# configuration values to be used by the service that is connected to the hyperswitch server
services:
  router: 
    version: v1.105.0
    image: juspaydotin/hyperswitch-router:v1.105.0-standalone
    host: http://localhost:8080
  consumer:
    image: juspaydotin/hyperswitch-consumer:v1.105.0-standalone
  producer:
    image: juspaydotin/hyperswitch-producer:v1.105.0-standalone
  controlCenter:
    image: juspaydotin/hyperswitch-control-center:v1.17.0
  sdkDemo:
    image: juspaydotin/hyperswitch-web:v1.0.10
    version: 0.16.7
    subversion: v0
    host: http://localhost:9090
    hyperswitchPublishableKey: pub_key
    hyperswitchSecretKey: secret_key

redis:
  # - enable Bitnami redis sub-chart helm installation
  enabled: true
  master:
    host: ""
    count: 1
  replica:
    replicaCount: 0
  auth:
    enabled: false
    sentinel: false


# TODO to handle
externalRedis: {}

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        replica_host: ""
        host: ""
        username: "db_user"
        password: "ZGJwYXNzd29yZDEx"
        database: "hyperswitch"
  architecture: standalone
  replication:
    synchronousCommit: "off"
    numSynchronousReplicas: 1
  readReplicas:
    replicaCount: 1

# TODO to handle
externalPostgres: {}

initDB:
  enable: true
  checkPGisUp:
    image: postgres:16-alpine3.19
    maxAttempt: 30
  migration:
    image: christophwurst/diesel-cli:latest

loadBalancer:
  targetSecurityGroup: loadBalancer-sg

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
