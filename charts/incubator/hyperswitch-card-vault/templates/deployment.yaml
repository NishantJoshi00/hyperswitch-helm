apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with (default .Values.global.annotations .Values.server.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  name: hyperswitch-card-vault-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hyperswitch-card-vault
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- with (default .Values.global.annotations .Values.server.pod.annotations) }}
        {{- toYaml . | nindent 10 }} 
        {{- end }}
      creationTimestamp: null
      labels:
        app: hyperswitch-card-vault
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{- with (default .Values.global.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution .Values.server.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution) }}
              matchExpression:
              {{- toYaml . | nindent 18 }}
            {{- end }}
                # matchExpression:
                #   - key: spot-instance
                #     operator: NotIn
                #     values:
                #       - "true"
                #   - key: inner # <label for the node>
                #     operator: In
                #     values:
                #       - vla # <Value for the label>
      containers:
        - env:
            - name: LOCKER__LOG__CONSOLE__ENABLED
              value: true
            - name: LOCKER__LOG__CONSOLE__LEVEL
              value: DEBUG
            - name: LOCKER__LOG__CONSOLE__LOG_FORMAT
              value: default
            - name: LOCKER__DATABASE__USERNAME
              value: {{ .Values.server.env.database_username }}
            - name: LOCKER__DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: locker-secrets-{{ .Release.Name }}
                  key: LOCKER__DATABASE__PASSWORD
            - name: LOCKER__DATABASE__HOST
              value: {{ include "postgresql.host" }}
            - name: LOCKER__DATABASE__PORT
              value: {{ include "postgresql.port" }}
            - name: LOCKER__DATABASE__DBNAME
              value: {{ .Values.server.env.database_name }}
            - name: LOCKER__LIMIT__REQUEST_COUNT
              value: 100
            - name: LOCKER__LIMIT__DURATION
              value: 60
            - name: LOCKER__SECRETS__TENANT
              value: hyperswitch
            - name: LOCKER__SECRETS__MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: locker-secrets
                  key: LOCKER__SECRETS__MASTER_KEY
            - name: LOCKER__SECRETS__LOCKER_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: locker-secrets
                  key: LOCKER__SECRETS__LOCKER_PRIVATE_KEY
            - name: LOCKER__SECRETS__TENANT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: locker-secrets
                  key: LOCKER__SECRETS__TENANT_PUBLIC_KEY
            - name: LOCKER__CACHE__MAX_CAPACITY
              value: 5000
            - name: LOCKER__CACHE__TTI
              value: 7200
            {{- with .Values.server.extra.env }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
          image: {{ .Values.server.image }}
          # image: juspaydotin/hyperswitch-card-vault:v1.3.0-nokms
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pkill -15 node
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: tartarus
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 400m
              memory: 500Mi

          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /local/config/development.toml
              name: hyperswitch-vault-config
              subPath: development.toml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: hyperswitch-router-role
      serviceAccountName: hyperswitch-router-role
      terminationGracePeriodSeconds: 120
      volumes:
        - configMap:
            defaultMode: 420
            name: hyperswitch-vault-config-{{ .Release.Name }}
          name: hyperswitch-vault-config
