# Default values for helm.
global:
  # Annotations to be added to all resources
  annotations: {}

  # Node affinity to be added to all resources
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []

# Values for hyperswitch-card-vault.
server:
  # Annotations to be added to hyperswitch-card-vault.
  annotations: {}

  # Image to be used for hyperswitch-card-vault.
  image: juspaydotin/hyperswitch-card-vault:0.1.3-nokms

  # values to be used in pod template.
  pod:
    # Annotations to be added to hyperswitch-card-vault pod.
    annotations: {}

  # Node affinity to be added to hyperswitch-card-vault.
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      []
      # matchExpression:
      # - key: spot-instance
      #   operator: NotIn
      #   values:
      #     - "true"
      # - key: <label for the node>
      #   operator: In
      #   values:
      #     - <Value for the label>

  # Secrets to be added to hyperswitch-card-vault.
  # To create the master key, follow the instructions provided here: https://github.com/juspay/hyperswitch-card-vault/blob/main/docs/guides/setup.md#preparing-the-required-keys
  secrets:
    # Optionally, you can run `cargo install --git https://github.com/juspay/hyperswitch-card-vault --root . && ./bin/utils master-key && rm ./bin/utils && rmdir ./bin`
    master_key: # <value for the secret>
    # To create this key pairs, follow the instructions provided here:
    ## Generating the private keys
    # openssl genrsa -out locker-private-key.pem 2048
    # openssl genrsa -out tenant-private-key.pem 2048
    #
    # # Generating the public keys
    # openssl rsa -in locker-private-key.pem -pubout -out locker-public-key.pem
    # openssl rsa -in tenant-private-key.pem -pubout -out tenant-public-key.pem

    locker_private_key: # <value for the secret>
    tenant_public_key: # <value for the secret>

  # Extra values to be added to hyperswitch-card-vault.
  extra:
    # extra env variables to be added to hyperswitch-card-vault.
    env: {}

# Values for database (postgresql).
postgresql:
  enabled: true
  primary:
    name: locker-db
  global:
    postgresql:
      auth:
        username: db_user
        password: V2tkS1ptTkhSbnBqZDI4OUNnPT0K
        database: locker-db
        architecture: standalone

external:
  postgresql:
    enabled: false
    config:
      host: # <value for the secret>
      port: # <value for the secret>
      username: # <value for the secret>
      password: # <value for the secret>
      database: # <value for the secret>

# Values for the database migration job
initDB:
  # Should we run the migrations on the database
  enable: true
  checkPGisUp:
    image: postgres:16-alpine3.19
    maxAttempt: 30
  migration:
    image: christophwurst/diesel-cli:latest
